# Tao.Algorithm
#
# Copyright Fernando Pelliccioni 2016
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

language: c++
sudo: false

matrix:
  include:
    # clang-3.5
    - env: CLANG_VERSION=3.5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      addons: &clang35
        apt:
          packages:
            - clang-3.5
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.5

    - env: CLANG_VERSION=3.5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: linux
      addons: *clang35

    - env: CLANG_VERSION=3.5 CXX_FLAGS="-std=c++14" BUILD_TYPE=Debug
      os: linux
      addons: *clang35

    - env: CLANG_VERSION=3.5 CXX_FLAGS="-std=c++14" BUILD_TYPE=Release
      os: linux
      addons: *clang35

    # clang-3.6
    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      addons: &clang36
        apt:
          packages:
            - clang-3.6
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6

    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: linux
      addons: *clang36

    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++14" BUILD_TYPE=Debug
      os: linux
      addons: *clang36

    - env: CLANG_VERSION=3.6 CXX_FLAGS="-std=c++14" BUILD_TYPE=Release
      os: linux
      addons: *clang36

    # gcc-4.9
    - env: GCC_VERSION=4.9 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      addons: &gcc49
        apt:
          packages:
            - g++-4.9
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=4.9 CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: linux
      addons: *gcc49

    - env: GCC_VERSION=4.9 CXX_FLAGS="-std=c++1y" BUILD_TYPE=Debug
      os: linux
      addons: *gcc49

    - env: GCC_VERSION=4.9 CXX_FLAGS="-std=c++1y" BUILD_TYPE=Release
      os: linux
      addons: *gcc49

    # gcc-5
    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: linux
      addons: &gcc5
        apt:
          packages:
            - g++-5
          sources:
            - ubuntu-toolchain-r-test

    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: linux
      addons: *gcc5

    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++14" BUILD_TYPE=Debug
      os: linux
      addons: *gcc5

    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++14" BUILD_TYPE=Release
      os: linux
      addons: *gcc5

    # Xcode 7
    - env: CXX_FLAGS="-std=c++11" BUILD_TYPE=Debug
      os: osx
      osx_image: xcode7
      addons: &xcode7

    - env: CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: osx
      osx_image: xcode7
      addons: *xcode7

    - env: CXX_FLAGS="-std=c++14" BUILD_TYPE=Release
      os: osx
      osx_image: xcode7
      addons: *xcode7

    - env: CXX_FLAGS="-std=c++14" BUILD_TYPE=Release
      os: osx
      osx_image: xcode7
      addons: *xcode7


    # ##########################################################################
    # # Benchmarks
    # ##########################################################################
    # - env: BENCHMARKS=true COMPILER=clang++-3.6 CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
    # - env: BENCHMARKS=true COMPILER=clang++-3.6 CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug"

    # - env: BENCHMARKS=true COMPILER=clang++-3.7 CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
    # - env: BENCHMARKS=true COMPILER=clang++-3.7 CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug"

    # - env: BENCHMARKS=true COMPILER=clang++-3.8 CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Release"
    # - env: BENCHMARKS=true COMPILER=clang++-3.8 CMAKE_OPTIONS="-DCMAKE_BUILD_TYPE=Debug"


branches:
  only:
    - master
    - develop

before_install:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi

  # - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then brew install cmake; fi

install:
  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake
    fi

# install:
#   - mkdir build
#   - cd build
#   - export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Werror"
#   - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ..


before_script:
  ############################################################################
  # Go back to the root of the project and setup the build directory
  ############################################################################
  - export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Werror"
  - cd ${TRAVIS_BUILD_DIR}
  # - (mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ..)
  - mkdir build
  - cd build
  - export CXX_FLAGS="${CXX_FLAGS} -Wall -Wextra -Werror"
  - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ..

script:
  - make benchmarks 
  - make tests -k

notifications:
  email: false
  webhooks:
    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always


